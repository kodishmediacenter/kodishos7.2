# tux.script - boot splash plugin
#                                                   
# For INSTALL INSTRUCTIONS, CREDITS AND ATTRIBUTION see README.md
# The theme is licensed under GNU GPL v3 read more in LICENSE

logo.image = Image("tux/boot.png");
Window.SetBackgroundTopColor(0, 0, 0);
Window.SetBackgroundBottomColor(0, 0, 0);

if (Plymouth.GetMode () == "shutdown")
{
logo.image = Image("tux/boot.png");        
}


logo.sprite = Sprite(logo.image);
logo.sprite.SetX (Window.GetX() + Window.GetWidth()  / 2 - logo.image.GetWidth()  / 2);
logo.sprite.SetY (Window.GetY() + Window.GetHeight() / 2 - logo.image.GetHeight() / 2);
logo.sprite.SetOpacity (1);

#----------------------------------------- Progress Bar --------------------------------

if (Plymouth.GetMode () == "boot")
{
  progress_box.image = Image("progress_box.png");
  progress_box.sprite = Sprite(progress_box.image);

  progress_box.x = Window.GetX() + Window.GetWidth() / 2 - progress_box.image.GetWidth() / 2;
  progress_box.y = Window.GetY() + Window.GetHeight() * 0.75 - progress_box.image.GetHeight() / 2;
  progress_box.sprite.SetPosition(progress_box.x, progress_box.y, 0);

  progress_bar.original_image = Image("progress_bar.png");
  progress_bar.sprite = Sprite();

  progress_bar.x = Window.GetX() + Window.GetWidth()  / 2 -        progress_bar.original_image.GetWidth() / 2;
  progress_bar.y = Window.GetY() + Window.GetHeight() / 2 * 1.5  - progress_box.image.GetHeight() / 2 + (progress_box.image.GetHeight() - progress_bar.original_image.GetHeight()) / 2;
  progress_bar.sprite.SetPosition(progress_bar.x, progress_bar.y, 1);

  fun progress_callback (duration, progress)
    {
      if (progress_bar.image.GetWidth () != Math.Int (progress_bar.original_image.GetWidth () * progress))
        {
          progress_bar.image = progress_bar.original_image.Scale(progress_bar.original_image.GetWidth(progress_bar.original_image) * progress, progress_bar.original_image.GetHeight());
          progress_bar.sprite.SetImage (progress_bar.image);
        }
    }

  Plymouth.SetBootProgressFunction(progress_callback);
}

#----------------------------------------- Quit --------------------------------

fun quit_callback ()
{
  logo.sprite.SetOpacity (1);
}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Message --------------------------------

message_sprites = [];
message_sprite_count = 0;
message_sprite_y = 10;

fun display_message_callback (text)
{
  my_image = Image.Text(text, 1, 1, 1);
  message_sprites[message_sprite_count] = Sprite(my_image);
  message_sprites[message_sprite_count].SetPosition(10, message_sprite_y, 10000);
  message_sprites[message_sprite_count].text = text;
  message_sprite_count++;
  message_sprite_y += my_image.GetHeight();
}

fun hide_message_callback (text)
{
  for (i = 0; i < message_sprite_count; i++)
    {
      if (message_sprites[i].text == text)
        message_sprites[i] = NULL;
    }
}

Plymouth.SetDisplayMessageFunction (display_message_callback);
Plymouth.SetHideMessageFunction (hide_message_callback);
